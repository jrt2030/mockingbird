#! /usr/bin/env node
let { MockingServer } = require('../dist/lib/server');
let { SourceLayer } = require('../dist/lib/engine/extesions/source');
let { MockingEngine } = require('../dist/lib/engine/mockEngine');

let sourceLayer = new SourceLayer(require('./test_data.json'));

let engineConfig = {
  sourceLayer: sourceLayer,
  debug: process.env.NODE_ENV === "production" ? false : true  
}

let simulators = require('../dist/lib/engine/simulators');
let engine = new MockingEngine(engineConfig);

const { MOCKINGBIRD_SERVICE_PORT = 3333 } = process.env;

engine.loadSimulators([
  new simulators.DelaySimulator({ namespace: "delay"}),
  new simulators.ConnectionSimulator({ namespace: "connection" }),
  new simulators.HeaderSimulator({ namespace: "header" }),
  new simulators.BodySimulator({ namespace: "body" }),
  new simulators.RequestSimulator({ namespace: "request" })]
);

let serverConfig = {
    port: MOCKINGBIRD_SERVICE_PORT,
    debug: true,
    engine: engine    
}

let mockingServer = new MockingServer(serverConfig);

mockingServer.startService();